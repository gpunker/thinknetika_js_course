(()=>{"use strict";class t{constructor(t,e,s){this._color=t,this._desk=e,this._cell=s}_color=null;_desk=null;_cell=null;get color(){return this._color}get desk(){return this._desk}get cell(){return this._cell}moves(){throw Error("Function `moves` is not implemented")}}class e extends t{constructor(t,e,s){super(t,e,s)}moves(){return"Ходы для ладьи"}}class s extends t{constructor(t,e,s){super(t,e,s)}moves(){return"Ходы для коня"}}class r extends t{constructor(t,e,s){super(t,e,s)}moves(){return"Ходы для слона"}}class n extends t{constructor(t,e,s){super(t,e,s)}moves(){return"Ходы для ферзя"}}class o extends t{constructor(t,e,s){super(t,e,s)}moves(){return"Ходы для короля"}}class c extends t{constructor(t,e,s){super(t,e,s)}_doubleMove=!0;_canEvolve=!1;get canEvolve(){return this._canEvolve}moves(){return"Ходы для пешки"}}const u="white",i="black";class l{constructor(){let t={};l.x.forEach((function(e){return l.y.forEach((function(s){return t[`${e}${s}`]=null}))})),t.A1=new e(u,this,"A1"),t.B1=new s(u,this,"B1"),t.C1=new r(u,this,"C1"),t.D1=new n(u,this,"D1"),t.E1=new o(u,this,"E1"),t.F1=new r(u,this,"F1"),t.G1=new s(u,this,"G1"),t.H1=new e(u,this,"H1");for(let e=0;e<l.x.length;e++)t[`${l.x[e]}2`]=new c(u,this,`${l.x[e]}2`);for(let e=0;e<l.x.length;e++)t[`${l.x[e]}7`]=new c(u,this,`${l.x[e]}7`);t.A8=new e(i,this,"A8"),t.B8=new s(i,this,"B8"),t.C8=new r(i,this,"C8"),t.D8=new n(i,this,"D8"),t.E8=new o(i,this,"E8"),t.F8=new r(i,this,"F8"),t.G8=new s(i,this,"G8"),t.H8=new e(i,this,"H8"),this._coords=t}_coords={};static get y(){return[1,2,3,4,5,6,7,8]}static get x(){return["A","B","C","D","E","F","G","H"]}get coords(){return this._coords}}const h={CONTINUE:"continue",WHITE_WINS:"white wins",BLACK_WINS:"black wins"};class _{constructor(){}_state=_.states[0];_desk=new l;_turn=u;_history=[];_killedFigures=[];_turnCount=0;static get states(){return Object.keys(h).map((t=>h[t]))}get desk(){return this._desk}get turn(){return this._turn}get history(){return this._history}get killedFigures(){return this._killedFigures}get turnCount(){return this._turnCount}get state(){return this._state}}let a=(new _).desk;console.log(a.coords.A1.color),console.log(_.states)})();